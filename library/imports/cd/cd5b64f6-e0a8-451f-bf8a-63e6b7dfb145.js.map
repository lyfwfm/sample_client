{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\main.js"],"names":["cc","Class","extends","Component","properties","start","ws","WebSocket","onopen","event","console","log","onmessage","JSON","parse","data","onerror","onclose","setTimeout","readyState","OPEN","sendValue","stringify","send"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;;AAqBL;;AAEA;;AAEAC,SAzBK,mBAyBI;AACL,YAAIC,KAAK,IAAIC,SAAJ,CAAc,qBAAd,CAAT;AACAD,WAAGE,MAAH,GAAY,UAAUC,KAAV,EAAiB;AACzBC,oBAAQC,GAAR,CAAY,0BAAZ;AACH,SAFD;AAGAL,WAAGM,SAAH,GAAe,UAAUH,KAAV,EAAiB;AAC5BC,oBAAQC,GAAR,CAAYE,KAAKC,KAAL,CAAWL,MAAMM,IAAjB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAZ;AACH,SAFD;AAGAT,WAAGU,OAAH,GAAa,UAAUP,KAAV,EAAiB;AAC1BC,oBAAQC,GAAR,CAAY,0BAAZ;AACH,SAFD;AAGAL,WAAGW,OAAH,GAAa,UAAUR,KAAV,EAAiB;AAC1BC,oBAAQC,GAAR,CAAY,4BAAZ;AACH,SAFD;;AAIAO,mBAAW,YAAY;AACnB,gBAAIZ,GAAGa,UAAH,KAAkBZ,UAAUa,IAAhC,EAAsC;AAClC,oBAAIC,YAAYR,KAAKS,SAAL,CAAe,CAAC,GAAD,EAAK,GAAL,EAAS,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAT,CAAf,CAAhB;AACAZ,wBAAQC,GAAR,CAAY,qBAAqBU,SAAjC;AACAf,mBAAGiB,IAAH,CAAQF,SAAR;AACH,aAJD,MAKK;AACDX,wBAAQC,GAAR,CAAY,oCAAZ;AACH;AACJ,SATD,EASG,IATH;AAUH;AAlDI;;AAoDL;AApDJ","file":"main.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        var ws = new WebSocket(\"ws://localhost:8002\");\r\n        ws.onopen = function (event) {\r\n            console.log(\"Send Text WS was opened.\");\r\n        };\r\n        ws.onmessage = function (event) {\r\n            console.log(JSON.parse(event.data)[2][0][0]);\r\n        };\r\n        ws.onerror = function (event) {\r\n            console.log(\"Send Text fired an error\");\r\n        };\r\n        ws.onclose = function (event) {\r\n            console.log(\"WebSocket instance closed.\");\r\n        };\r\n       \r\n        setTimeout(function () {\r\n            if (ws.readyState === WebSocket.OPEN) {\r\n                var sendValue = JSON.stringify([101,100,[1,2,3]]);\r\n                console.log(\"send to server :\" + sendValue);\r\n                ws.send(sendValue);\r\n            }\r\n            else {\r\n                console.log(\"WebSocket instance wasn't ready...\");\r\n            }\r\n        }, 3000);\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}